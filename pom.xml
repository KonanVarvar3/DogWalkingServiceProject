<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>com.dvoryanchikov.dogWalkingService</groupId>
    <artifactId>myPlugin</artifactId>
    <version>1.0.0.${buildNumber}</version>

    <organization>
        <name>Example Company</name>
        <url>http://www.example.com/</url>
    </organization>

    <name>myPlugin</name>
    <description>This is the com.dvoryanchikov.dogWalkingService:myPlugin plugin for Atlassian JIRA.</description>
    <packaging>atlassian-plugin</packaging>

    <dependencies>
        <dependency>
            <groupId>com.atlassian.jira</groupId>
            <artifactId>jira-api</artifactId>
            <version>${jira.version}</version>
            <scope>provided</scope>
        </dependency>
        <!-- Add dependency on jira-core if you want access to JIRA implementation classes as well as the sanctioned API. -->
        <!-- This is not normally recommended, but may be required eg when migrating a plugin originally developed against JIRA 4.x -->

        <dependency>
            <groupId>com.atlassian.jira</groupId>
            <artifactId>jira-core</artifactId>
            <version>${jira.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.10</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.atlassian.plugins</groupId>
            <artifactId>atlassian-plugins-osgi-javaconfig</artifactId>
            <version>${osgi.javaconfig.version}</version>
        </dependency>

        <!-- OSGi Java Config dependencies -->
        <dependency>
            <groupId>org.apache.felix</groupId>
            <artifactId>org.apache.felix.framework</artifactId>
            <version>4.0.0</version>
            <scope>provided</scope>
        </dependency>

        <!-- WIRED TEST RUNNER DEPENDENCIES -->
        <dependency>
            <groupId>com.atlassian.plugins</groupId>
            <artifactId>atlassian-plugins-osgi-testrunner</artifactId>
            <version>${plugin.testrunner.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>javax.ws.rs</groupId>
            <artifactId>jsr311-api</artifactId>
            <version>1.1.1</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.2.2-atlassian-1</version>
        </dependency>

        <dependency>
            <groupId>com.atlassian.activeobjects</groupId>
            <artifactId>activeobjects-plugin</artifactId>
            <version>1.1.0</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>com.atlassian.templaterenderer</groupId>
            <artifactId>atlassian-template-renderer-api</artifactId>
            <version>2.0.0</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>com.atlassian.jira</groupId>
            <artifactId>jira-rest-java-client-core</artifactId>
            <version>3.0.0</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>com.atlassian.jira</groupId>
            <artifactId>jira-rest-java-client-api</artifactId>
            <version>3.0.0</version>
            <scope>provided</scope>
        </dependency>
        

        <!-- Uncomment to use TestKit in your project. Details at https://bitbucket.org/atlassian/jira-testkit -->
        <!-- You can read more about TestKit at https://developer.atlassian.com/display/JIRADEV/Plugin+Tutorial+-+Smarter+integration+testing+with+TestKit -->
        <!--
        <dependency>
            <groupId>com.atlassian.jira.tests</groupId>
            <artifactId>jira-testkit-client</artifactId>
            <version>${testkit.version}</version>
            <scope>test</scope>
        </dependency>
        -->
    </dependencies>

        <build>
            <resources>
                <resource>
                    <directory>src/main/resources</directory>
                    <filtering>true</filtering>
                </resource>
            </resources>

            <plugins>
                <plugin>
                    <groupId>com.atlassian.maven.plugins</groupId>
                    <artifactId>jira-maven-plugin</artifactId>
                    <version>${amps.version}</version>
                    <extensions>true</extensions>

                    <configuration>

                        <productVersion>${jira.version}</productVersion>
                        <productDataVersion>${jira.version}</productDataVersion>

                        <!-- Uncomment to install TestKit backdoor in JIRA. -->
                        <!--
                        <pluginArtifacts>
                            <pluginArtifact>
                                <groupId>com.atlassian.jira.tests</groupId>
                                <artifactId>jira-testkit-plugin</artifactId>
                                <version>${testkit.version}</version>
                            </pluginArtifact>
                        </pluginArtifacts>
                        -->

                        <enableQuickReload>true</enableQuickReload>
<!--                        <enableFastdev>true</enableFastdev>-->
                        <compressResources>false</compressResources>
                        <encoding>utf8</encoding>
<!--                        <source>1.8</source>-->
<!--                        <target>1.8</target>-->
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>1.12</version>
                    <executions>
                        <execution>
                            <id>parse-version</id>
                            <phase>validate</phase>
                            <goals>
                                <goal>parse-version</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>buildnumber-maven-plugin</artifactId>
                    <version>1.3</version>
                    <configuration>
                        <revisionOnScmFailure>no.scm.config.in.pom</revisionOnScmFailure>
                    </configuration>
                    <executions>
                        <execution>
                            <id>create-timestamp-id</id>
                            <phase>validate</phase>
                            <goals>
                                <goal>create-timestamp</goal>
                            </goals>
                            <configuration>
                                <timestampFormat>yyyy-MM-dd HH:mm:ss.S</timestampFormat>
                                <timestampPropertyName>myBuildNumberVariable</timestampPropertyName>
                                <!-- formats the timestamp all together like 2016-04-04 14:17:05.123 and puts
                                    it in the ${myBuildNumberVariable} buildProperty -->
                            </configuration>
                        </execution>
                    </executions>
<!--                    <configuration>-->
<!--                        <format>{0}</format>-->
<!--                        <items>-->
<!--                            <item>buildNumber</item>-->
<!--                        </items>-->
<!--                        &lt;!&ndash; doCheck and doUpdate actually talk to repository if it's true, Check would check that there are no local changes. Update would update it &ndash;&gt;-->
<!--&lt;!&ndash;                        <docheck>false</docheck>&ndash;&gt;-->
<!--&lt;!&ndash;                        <doupdate>false</doupdate>&ndash;&gt;-->
<!--                    </configuration>-->
                </plugin>

                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>versions-maven-plugin</artifactId>
                    <version>2.2</version>
                    <executions>
                        <execution>
                            <id>set-version</id>
                            <phase>validate</phase>
                            <goals>
                                <goal>set</goal>
                            </goals>
                            <configuration>
                                <!--suppress UnresolvedMavenProperty -->
                                <newVersion>
                                    ${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}.${buildNumber}
                                </newVersion>
                            </configuration>
                        </execution>
                        <execution>
                            <id>upgrade-pom</id>
                            <phase>validate</phase>
                            <goals>
                                <goal>commit</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>

        </build>

    <properties>
        <jira.version>8.6.1</jira.version>
        <amps.version>8.1.0</amps.version>
        <plugin.testrunner.version>2.0.1</plugin.testrunner.version>
        <osgi.javaconfig.version>0.2.0</osgi.javaconfig.version>
<!--        <spring.version>4.2.5.RELEASE</spring.version>-->
        <atlassian.spring.scanner.version>1.2.13</atlassian.spring.scanner.version>
        <!-- This property ensures consistency between the key in atlassian-plugin.xml and the OSGi bundle's key. -->
        <atlassian.plugin.key>${project.groupId}.${project.artifactId}</atlassian.plugin.key>
        <!-- TestKit version 6.x for JIRA 6.x -->
        <testkit.version>6.3.11</testkit.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
    </properties>

</project>
